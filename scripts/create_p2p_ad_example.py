#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è P2P –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å —É–º–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
"""

import json
import sys
sys.path.append('.')
from scripts.bybit_smart_ad_creator import SmartAdCreator

def create_p2p_ad(api_key: str, api_secret: str, amount_rub: float):
    """
    –°–æ–∑–¥–∞–µ—Ç P2P –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É USDT
    
    Args:
        api_key: API –∫–ª—é—á Bybit
        api_secret: API —Å–µ–∫—Ä–µ—Ç Bybit
        amount_rub: –°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ —Ä—É–±–ª—è—Ö
    """
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —É–º–Ω–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è
    creator = SmartAdCreator(api_key, api_secret, testnet=False)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    ad_params = {
        "amount": str(amount_rub),  # –°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö
        "remark": "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–¥–∞–∂–∞ USDT. –ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã"
    }
    
    print(f"üöÄ –°–æ–∑–¥–∞–Ω–∏–µ P2P –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∂—É USDT")
    print(f"üíµ –°—É–º–º–∞: {amount_rub} RUB")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
    result = creator.create_smart_ad(ad_params)
    
    if result.get("ret_code") == 0:
        item_id = result.get("result", {}).get("itemId", "Unknown")
        print(f"\n‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!")
        print(f"üìù ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {item_id}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        print("\nüìã –î–µ—Ç–∞–ª–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:")
        print(f"  - –¢–∏–ø: –ü—Ä–æ–¥–∞–∂–∞ USDT")
        print(f"  - –°—É–º–º–∞: {amount_rub} RUB")
        print(f"  - –°—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã: 15 –º–∏–Ω—É—Ç")
        print(f"  - –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–æ")
        
        return True
    else:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è")
        print(f"–ö–æ–¥: {result.get('ret_code')}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {result.get('ret_msg')}")
        
        # –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –æ—à–∏–±–∫–∞–º
        error_code = result.get("ret_code")
        if error_code == 912120024:
            print("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ USDT –Ω–∞ Funding –∞–∫–∫–∞—É–Ω—Ç–µ")
            print("   –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT —Å–æ Spot –Ω–∞ Funding –∞–∫–∫–∞—É–Ω—Ç")
        elif error_code == -1:
            print("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
        
        return False

def main():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –º–µ—Å—Ç–∞
    with open("test_data/bybit_creditials.json", "r") as f:
        credentials = json.load(f)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ 10000 —Ä—É–±–ª–µ–π
    create_p2p_ad(
        api_key=credentials["api_key"],
        api_secret=credentials["api_secret"],
        amount_rub=10000
    )

if __name__ == "__main__":
    main()